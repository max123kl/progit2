[preface]
== Einleitung

Sie werden gleich mehrere Stunden Ihres Lebens damit verbringen, etwas über Git zu lesen.
Geben Sie uns eine Minute Zeit, um zu erklären, was wir für Sie auf Lager haben.
Hier ist eine kurze Zusammenfassung der zehn Kapitel und drei Anhänge dieses Buches.

Im *1. Kapitel* werden wir Version Control Systeme (VCSs) und die Git-Grundlagen behandeln – kein technisches Zeug, nur was Git ist, warum es in einem Land voller VCSs entstanden ist, was es auszeichnet und warum es so viele Menschen benutzen.
Dann erklären wir, wie Sie Git herunterladen und zum ersten Mal einrichten können, wenn Sie es noch nicht auf Ihrem System installiert haben.

Im *2. Kapitel* gehen wir auf die grundlegende Verwendung von Git ein – wie Sie Git in 80% der Fälle verwenden können, die Ihnen am häufigsten begegnen werden.
Nachdem Sie dieses Kapitel gelesen haben, sollten Sie in der Lage sein, ein Repository zu klonen, zu sehen, was in der Projekthistorie passiert ist, Dateien zu ändern und Änderungen vorzunehmen.
Sollte sich das Buch an dieser Stelle spontan selbst entzünden, sollten Sie solange eine recht nützliche Rolle bei der Bedienung von Git spielen können, bis ein neues Buch geholt wurde.

Im *3. Kapitel* geht es um das Branches-Modell in Git, das oft als Gits Killerfunktion beschrieben wird.
Hier erfahren Sie, was Git wirklich von der Masse abhebt.
Wenn Sie fertig sind, werden Sie vielleicht das Bedürfnis verspüren, einen ruhigen Moment damit zu verbringen, darüber nachzudenken, wie Sie gelebt haben, bevor das Branching von Git Teil Ihres Lebens wurde.

Im *4. Kapitel* wird Git auf dem Server behandelt.
Dieses Kapitel richtet sich an diejenigen von Ihnen, die Git innerhalb Ihrer Organisation oder auf Ihrem eigenen persönlichen Server für die Kooperation einrichten möchten.
Wir werden auch verschiedene Hosting-Optionen erkunden, falls Sie es vorziehen, jemanden anderen damit zu beauftragen.

Im *5. Kapitel* werden verschiedene verteilte Workflows ausführlich behandelt und wie man sie mit Git realisiert.
Wenn Sie mit diesem Kapitel fertig sind, sollten Sie in der Lage sein, professionell mit mehreren Remote-Repositories zu arbeiten, Git über E-Mail zu verwenden und geschickt mit zahlreichen Remote-Branches und bereitgestellten Patches zu jonglieren.

*Chapter 6* covers the GitHub hosting service and tooling in depth.
We cover signing up for and managing an account, creating and using Git repositories, common workflows to contribute to projects and to accept contributions to yours, GitHub's programmatic interface and lots of little tips to make your life easier in general.

*Chapter 7* is about advanced Git commands.
Here you will learn about topics like mastering the scary 'reset' command, using binary search to identify bugs, editing history, revision selection in detail, and a lot more.
This chapter will round out your knowledge of Git so that you are truly a master.

*Chapter 8* is about configuring your custom Git environment.
This includes setting up hook scripts to enforce or encourage customized policies and using environment configuration settings so you can work the way you want to.
We will also cover building your own set of scripts to enforce a custom committing policy.

*Chapter 9* deals with Git and other VCSs.
This includes using Git in a Subversion (SVN) world and converting projects from other VCSs to Git.
A lot of organizations still use SVN and are not about to change, but by this point you'll have learned the incredible power of Git -- and this chapter shows you how to cope if you still have to use a SVN server.
We also cover how to import projects from several different systems in case you do convince everyone to make the plunge.

*Chapter 10* delves into the murky yet beautiful depths of Git internals.
Now that you know all about Git and can wield it with power and grace, you can move on to discuss how Git stores its objects,
what the object model is, details of packfiles, server protocols, and more.
Throughout the book, we will refer to sections of this chapter in case you feel like diving deep at that point; but if you are like us and want to dive into the technical details, you may want to read Chapter 10 first.
We leave that up to you.

In *Appendix A*, we look at a number of examples of using Git in various specific environments.
We cover a number of different GUIs and IDE programming environments that you may want to use Git in and what is available for you.
If you're interested in an overview of using Git in your shell, your IDE, or your text editor, take a look here.

In *Appendix B*, we explore scripting and extending Git through tools like libgit2 and JGit.
If you're interested in writing complex and fast custom tools and need low-level Git access, this is where you can see what that landscape looks like.

Finally, in *Appendix C*, we go through all the major Git commands one at a time and review where in the book we covered them and what we did with them.
If you want to know where in the book we used any specific Git command you can look that up here.

Let's get started.
